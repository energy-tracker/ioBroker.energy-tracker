{
  "version": 3,
  "sources": ["../../src/lib/device-scheduler.ts"],
  "sourcesContent": ["import { EnergyTrackerApi } from \"./energy-tracker-api\";\n\nexport class DeviceScheduler {\n  get timerCount(): number {\n    return this.timers.size;\n  }\n\n  private readonly timers = new Map<string, NodeJS.Timeout>();\n\n  constructor(\n    private readonly adapter: ioBroker.Adapter,\n    private readonly api: EnergyTrackerApi\n  ) {}\n\n  public schedule(devices: ioBroker.AdapterDevice[]): void {\n    for (const device of devices) {\n      if (!device.deviceId || !device.sourceState || !device.sendIntervalHours) {\n        this.adapter.log.warn(`[${device.sourceState}] Device config incomplete \u2013 skipping.`);\n        continue;\n      }\n\n      const logPrefix = `[${device.sourceState}]`;\n      const intervalMs = device.sendIntervalHours * 60 * 60 * 1000;\n\n      this.adapter.log.info(`[${logPrefix}] Scheduling reading every ${device.sendIntervalHours}h`);\n\n      const send = (): Promise<void> => this.api.sendReading(device);\n      send();\n      const timer = setInterval(send, intervalMs);\n      this.timers.set(device.deviceId, timer);\n    }\n  }\n\n  public clear(): void {\n    for (const timer of this.timers.values()) {\n      clearInterval(timer);\n    }\n    this.timers.clear();\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,gBAAgB;AAAA,EAO3B,YACmB,SACA,KACjB;AAFiB;AACA;AAAA,EAChB;AAAA,EATH,IAAI,aAAqB;AACvB,WAAO,KAAK,OAAO;AAAA,EACrB;AAAA,EAEiB,SAAS,oBAAI,IAA4B;AAAA,EAOnD,SAAS,SAAyC;AACvD,eAAW,UAAU,SAAS;AAC5B,UAAI,CAAC,OAAO,YAAY,CAAC,OAAO,eAAe,CAAC,OAAO,mBAAmB;AACxE,aAAK,QAAQ,IAAI,KAAK,IAAI,OAAO,WAAW,6CAAwC;AACpF;AAAA,MACF;AAEA,YAAM,YAAY,IAAI,OAAO,WAAW;AACxC,YAAM,aAAa,OAAO,oBAAoB,KAAK,KAAK;AAExD,WAAK,QAAQ,IAAI,KAAK,IAAI,SAAS,8BAA8B,OAAO,iBAAiB,GAAG;AAE5F,YAAM,OAAO,MAAqB,KAAK,IAAI,YAAY,MAAM;AAC7D,WAAK;AACL,YAAM,QAAQ,YAAY,MAAM,UAAU;AAC1C,WAAK,OAAO,IAAI,OAAO,UAAU,KAAK;AAAA,IACxC;AAAA,EACF;AAAA,EAEO,QAAc;AACnB,eAAW,SAAS,KAAK,OAAO,OAAO,GAAG;AACxC,oBAAc,KAAK;AAAA,IACrB;AACA,SAAK,OAAO,MAAM;AAAA,EACpB;AACF;",
  "names": []
}
